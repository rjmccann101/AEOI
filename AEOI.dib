#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!markdown

# Introduction

The Automatic Exchange of Information, AEOI, is an agreement by the UK to exchange tax information with other countries. The details of  AEOI can be found here: https://www.gov.uk/guidance/automatic-exchange-of-information-introduction on the HMRC website.

This notebook is an attempt to create an F# Domain Model that supports the data specified by HMRC for AEOI reporting and which is easily serializable to XML in a format that meets the XML Schema specified.

#!markdown

## FPrimitive

The FPrimitive library (see: https://github.com/stijnmoreels/FPrimitive) will be used by the model to provide specifications for the elements of the data model.

#!fsharp

#r "nuget: FPrimitive"

#!fsharp

open FPrimitive

#!markdown

### Positive Integer
A type that only allows positive integer numbers.

#!fsharp

type PositiveInt =
  private PositiveInt of int with
    static member create x =
      Spec.def 
      |> Spec.greaterThanOrEqual 0 "integer should be greater than zero"
      |> Spec.createModel PositiveInt x

#!markdown

## MessageReference
This is the senders unique reference for the message and it must be between 24 and 36 characters long

#!fsharp

type MessageReference =
    private MessageReference of string with 
        static member create x =
            Spec.def
            |> Spec.lengthBetween 24 36 "Message Reference must be between 24 and 36 characters long"
            |> Spec.createModel MessageReference x

#!markdown

### Payment Amount
The amount of money paid from an account.  This value must be greater tha 0.01

#!fsharp

type PaymentAmount =
    private PaymentAmount of decimal with
        static member create x =
            Spec.def
            |> Spec.greaterThan 0.01m "Payment amount should be greater than or equal to 0.01"
            |> Spec.createModel PaymentAmount x

#!markdown

## IsoCountryCode
A two digit ISO country code

#!fsharp

let countries = Map [("AF","AFGHANISTAN");("AX","ALAND ISLANDS");("AL","ALBANIA");("DZ","ALGERIA");("AS","AMERICAN SAMOA");("AD","ANDORRA");("AO","ANGOLA");("AI","ANGUILLA");("AQ","ANTARCTICA");("AG","ANTIGUA AND BARBUDA");("AR","ARGENTINA");("AM","ARMENIA");("AW","ARUBA");("AU","AUSTRALIA");("AT","AUSTRIA");("AZ","AZERBAIJAN");("BS","BAHAMAS");("BH","BAHRAIN");("BD","BANGLADESH");("BB","BARBADOS");("BY","BELARUS");("BE","BELGIUM");("BZ","BELIZE");("BJ","BENIN");("BM","BERMUDA");("BT","BHUTAN");("BO","BOLIVIA, PLURINATIONAL STATE OF");("BQ","BONAIRE, SINT EUSTATIUS AND SABA");("BA","BOSNIA AND HERZEGOVINA");("BW","BOTSWANA");("BV","BOUVET ISLAND");("BR","BRAZIL");("IO","BRITISH INDIAN OCEAN TERRITORY");("BN","BRUNEI DARUSSALAM");("BG","BULGARIA");("BF","BURKINA FASO");("BI","BURUNDI");("KH","CAMBODIA");("CM","CAMEROON");("CA","CANADA");("CV","CAPE VERDE");("KY","CAYMAN ISLANDS");("CF","CENTRAL AFRICAN REPUBLIC");("TD","CHAD");("CL","CHILE");("CN","CHINA");("CX","CHRISTMAS ISLAND");("CC","COCOS (KEELING) ISLANDS");("CO","COLOMBIA");("KM","COMOROS");("CG","CONGO");("CD","CONGO, THE DEMOCRATIC REPUBLIC OF THE");("CK","COOK ISLANDS");("CR","COSTA RICA");("CI","COTE D'IVOIRE");("HR","CROATIA");("CU","CUBA");("CW","CURACAO");("CY","CYPRUS");("CZ","CZECH REPUBLIC");("DK","DENMARK");("DJ","DJIBOUTI");("DM","DOMINICA");("DO","DOMINICAN REPUBLIC");("EC","ECUADOR");("EG","EGYPT");("SV","EL SALVADOR");("GQ","EQUATORIAL GUINEA");("ER","ERITREA");("EE","ESTONIA");("ET","ETHIOPIA");("FK","FALKLAND ISLANDS (MALVINAS)");("FO","FAROE ISLANDS");("FJ","FIJI");("FI","FINLAND");("FR","FRANCE");("GF","FRENCH GUIANA");("PF","FRENCH POLYNESIA");("TF","FRENCH SOUTHERN TERRITORIES");("GA","GABON");("GM","GAMBIA");("GE","GEORGIA");("DE","GERMANY");("GH","GHANA");("GI","GIBRALTAR");("GR","GREECE");("GL","GREENLAND");("GD","GRENADA");("GP","GUADELOUPE");("GU","GUAM");("GT","GUATEMALA");("GG","GUERNSEY");("GN","GUINEA");("GW","GUINEA-BISSAU");("GY","GUYANA");("HT","HAITI");("HM","HEARD ISLAND AND MCDONALD ISLANDS");("VA","HOLY SEE (VATICAN CITY STATE)");("HN","HONDURAS");("HK","HONG KONG");("HU","HUNGARY");("IS","ICELAND");("IN","INDIA");("ID","INDONESIA");("IR","IRAN, ISLAMIC REPUBLIC OF");("IQ","IRAQ");("IE","IRELAND");("IM","ISLE OF MAN");("IL","ISRAEL");("IT","ITALY");("JM","JAMAICA");("JP","JAPAN");("JE","JERSEY");("JO","JORDAN");("KZ","KAZAKHSTAN");("KE","KENYA");("KI","KIRIBATI");("XK","KOSOVO");("KP","KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF");("KR","KOREA, REPUBLIC OF");("KW","KUWAIT");("KG","KYRGYZSTAN");("LA","LAO PEOPLE'S DEMOCRATIC REPUBLIC");("LV","LATVIA");("LB","LEBANON");("LS","LESOTHO");("LR","LIBERIA");("LY","LIBYA");("LI","LIECHTENSTEIN");("LT","LITHUANIA");("LU","LUXEMBOURG");("MO","MACAO");("MK","MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF");("MG","MADAGASCAR");("MW","MALAWI");("MY","MALAYSIA");("MV","MALDIVES");("ML","MALI");("MT","MALTA");("MH","MARSHALL ISLANDS");("MQ","MARTINIQUE");("MR","MAURITANIA");("MU","MAURITIUS");("YT","MAYOTTE");("MX","MEXICO");("FM","MICRONESIA, FEDERATED STATES OF");("MD","MOLDOVA, REPUBLIC OF");("MC","MONACO");("MN","MONGOLIA");("ME","MONTENEGRO");("MS","MONTSERRAT");("MA","MOROCCO");("MZ","MOZAMBIQUE");("MM","MYANMAR");("NA","NAMIBIA");("NR","NAURU");("NP","NEPAL");("NL","NETHERLANDS");("NC","NEW CALEDONIA");("NZ","NEW ZEALAND");("NI","NICARAGUA");("NE","NIGER");("NG","NIGERIA");("NU","NIUE");("NF","NORFOLK ISLAND");("MP","NORTHERN MARIANA ISLANDS");("NO","NORWAY");("OM","OMAN");("PK","PAKISTAN");("PW","PALAU");("PS","WEST BANK AND GAZA");("PA","PANAMA");("PG","PAPUA NEW GUINEA");("PY","PARAGUAY");("PE","PERU");("PH","PHILIPPINES");("PN","PITCAIRN");("PL","POLAND");("PT","PORTUGAL");("PR","PUERTO RICO");("QA","QATAR");("RE","REUNION");("RO","ROMANIA");("RU","RUSSIAN FEDERATION");("RW","RWANDA");("BL","SAINT BARTHELEMY");("SH","SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA");("KN","SAINT KITTS AND NEVIS");("LC","SAINT LUCIA");("MF","SAINT MARTIN (FRENCH PART)");("PM","SAINT PIERRE AND MIQUELON");("VC","SAINT VINCENT AND THE GRENADINES");("WS","SAMOA");("SM","SAN MARINO");("ST","SAO TOME AND PRINCIPE");("SA","SAUDI ARABIA");("SN","SENEGAL");("RS","SERBIA");("SC","SEYCHELLES");("SL","SIERRA LEONE");("SG","SINGAPORE");("SX","SINT MAARTEN (DUTCH PART)");("SK","SLOVAKIA");("SI","SLOVENIA");("SB","SOLOMON ISLANDS");("SO","SOMALIA");("ZA","SOUTH AFRICA");("GS","SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS");("SS","SOUTH SUDAN");("ES","SPAIN");("LK","SRI LANKA");("SD","SUDAN");("SR","SURINAME");("SJ","SVALBARD AND JAN MAYEN");("SZ","SWAZILAND");("SE","SWEDEN");("CH","SWITZERLAND");("SY","SYRIAN ARAB REPUBLIC");("TW","TAIWAN");("TJ","TAJIKISTAN");("TZ","TANZANIA, UNITED REPUBLIC OF");("TH","THAILAND");("TL","TIMOR-LESTE");("TG","TOGO");("TK","TOKELAU");("TO","TONGA");("TT","TRINIDAD AND TOBAGO");("TN","TUNISIA");("TR","TURKEY");("TM","TURKMENISTAN");("TC","TURKS AND CAICOS ISLANDS");("TV","TUVALU");("UG","UGANDA");("UA","UKRAINE");("AE","UNITED ARAB EMIRATES");("GB","UNITED KINGDOM");("US","UNITED STATES");("UM","UNITED STATES MINOR OUTLYING ISLANDS");("UY","URUGUAY");("UZ","UZBEKISTAN");("VU","VANUATU");("VE","VENEZUELA, BOLIVARIAN REPUBLIC OF");("VN","VIET NAM");("VG","VIRGIN ISLANDS, BRITISH");("VI","VIRGIN ISLANDS, U.S.");("WF","WALLIS AND FUTUNA");("EH","WESTERN SAHARA");("YE","YEMEN");("ZM","ZAMBIA");("ZW","ZIMBABWE")]
type IsoCountryCode =
    private IsoCountryCode of string with
        static member create x =
            Spec.def
            |> Spec.stringLength 2 "ISO Country code must be 2 character in length"
            |> Spec.createModel IsoCountryCode x

#!markdown

# BirthInfo
This data element identifies birth information of the Controlling Person and provides tax administrations with the choice of providing birth information in lieu of a TIN for the Controlling Person. The birth information can be omitted if the FI has not recorded the birth information or if a TIN is provided for the Controlling Person.

A BirthInfo element is made from the following components

## Date of Birth
When submitting a date of birth as part of the AEOI submission the date must be between 01/01/1900 and the current date

## City
City of birth for the Controlling Person

## CitySubElement
District/area of birth for the Controlling Person. Sub district from birth information. For 
example birth certificate.

## CountryInfo
Country of birth for the Controlling Person. Made up of the following

### BirthCountryCode
The ISO country code for the a Controlling Person’s country of birth

### BirthFormerCountryName
When an Controlling Person’s country of birth does not have an ISO country code the name of that country at the time of the account holder's birth can be entered here.

#!fsharp

type BirthDate =
    private BirthDate of DateTime with 
        static member create x =
            Spec.def
            |> Spec.greaterThanOrEqual DateTime.Now "Birth date should be after 1900/01/01"
            |> Spec.lessThan (DateTime(1900,1,1)) "Birth date should be before current date"
            |> Spec.createModel BirthDate x

#!fsharp

type BirthCity =
    private BirthCity of string with
        static member create x =
            Spec.def
            |> Spec.stringLengthMin 1 "If provided BirthCity must be at least 1 character long"
            |> Spec.stringLengthMax 70 "If provided BirthCity cannot be at more than 70 characters long"
            |> Spec.createModel BirthCity x

#!fsharp

type CitySubElement =
    private CitySubElement of string with
        static member create x =
            Spec.def
            |> Spec.stringLengthMin 1 "If provided CitySubElement must be at least 1 character long"
            |> Spec.stringLengthMax 70 "If provided CitySubElement cannot be at more than 70 characters long"
            |> Spec.createModel CitySubElement x

#!fsharp

type BirthInfo = {
    birthDate : BirthDate Option
    city : BirthCity Option
    citySubElement : CitySubElement Option
}

#!fsharp

type MessageCategory =
| NewSubmission
| SubmissionVariation
| SubmissionReplacement
| SubmissionVoid

type MessageData = {
    messageCategory : MessageCategory
}

#!fsharp

type SchemaVersion =
    private SchemaVersion of decimal with
        static member create x =
            Spec.def
            |> Spec.greaterThanOrEqual 1.0m "AEOI Schema Version must be 1.0 or greater"
            |> Spec.createModel SchemaVersion x

#!fsharp

type AEOIUKSubmissionFIReport = {
    schemaVersion : SchemaVersion
    messageData : MessageCategory
}
